#include "gameWorld.h"

gameWorld::gameWorld() 
{
	gridLength = 31;
	gridHeight = 17 ;                       //what does this do, should it be bigger since we scaled the window up?
	this->setUpInitialState();
}


void gameWorld::setUpInitialState() 
{
	exitPos = sf::Vector2i(1,0);													//creates the exit positon vector with eleements
	playerPos = sf::Vector2i(gridLength - 1, gridHeight - 1);						//creates the player position, subtracts from gridlength/height by 1 for the xand y coords

	setUpTiles();
	setUpEnemyPositions();
	
}


void gameWorld::setUpEnemyPositions() 
{
	enemyPositions.clear();
	enemyPositions.push_back(sf::Vector2i(0, 2));
	enemyPositions.push_back(sf::Vector2i(6, 2));
	enemyPositions.push_back(sf::Vector2i(2, 7));					//places enemies is their enemyPositons vector
}

void gameWorld::setUpTiles()									//populates tiles vector
{
	tiles.clear();
	std::vector<gameTile*>tileRow;								/*creates a vector of gameTile objects called tileRow.(creates texture and sprite in that location if it can load)
																  This is the inner vector object that popultes each tiles vector (columns)*/
	float y = 0;
	for (int row = 0; row <= 16; row++)
	{
		float x = 0;

		for (int column = 0; column <= 30; column++)
		{
			tileRow.push_back(new gameTile("plains.png", x, y, true, true));		/*populates that location with a new gameTile object which places a sprite
																						at position (x,y)*/		
			x += 64;
		}																					
		y += 64;
		tiles.push_back(tileRow);															//creates a new row (tiles is outer vector which is rows)							
	}																						//nested forlopp populates map with spritre in sf::window
}

	/*
	firstRow.push_back(new gameTile("wall.png", 0, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 50, 0, true, true));
	firstRow.push_back(new gameTile("wall.png", 100, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 150, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 200, 0, false, false)); 
	firstRow.push_back(new gameTile("wall.png", 250, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 300, 0, true, false));
	firstRow.push_back(new gameTile("wall.png", 350, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 400, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 450, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 500, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 550, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 600, 0, false, false));
	firstRow.push_back(new gameTile("plains.png", 650, 0, true, false));
	firstRow.push_back(new gameTile("plains.png", 700, 0, false, false));
	firstRow.push_back(new gameTile("plains.png", 750, 0, false, false));
	firstRow.push_back(new gameTile("plains.png", 800, 0, true, false));
	firstRow.push_back(new gameTile("plains.png", 850, 0, false, false));
	firstRow.push_back(new gameTile("plains.png", 900, 0, false, false));
	firstRow.push_back(new gameTile("plains.png", 950, 0, false, false));
	firstRow.push_back(new gameTile("plains.png", 1000, 0, true, true));
	firstRow.push_back(new gameTile("plains.png", 1050, 0, false, false));
	firstRow.push_back(new gameTile("plains.png", 1100, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1150, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1200, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1250, 0, true, false));
	firstRow.push_back(new gameTile("wall.png", 1300, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1350, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1400, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1450, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1500, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1550, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1600, 0, true, false));
	firstRow.push_back(new gameTile("wall.png", 1650, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1700, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1750, 0, true, false));
	firstRow.push_back(new gameTile("wall.png", 1800, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1850, 0, false, false));
	firstRow.push_back(new gameTile("wall.png", 1900, 0, false, false));
	tiles.push_back(firstRow);

	std::vector<gameTile*>secondRow;
	secondRow.push_back(new gameTile("wall.png", 0, 50, false, false));
	secondRow.push_back(new gameTile("plains.png", 50, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 100, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 150, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 200, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 250, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 300, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 350, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 400, 50, false, false));
	secondRow.push_back(new gameTile("plains.png", 450, 50, false, false));
	secondRow.push_back(new gameTile("plains.png", 500, 50, false, false));
	secondRow.push_back(new gameTile("plains.png", 550, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 600, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 650, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 700, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 750, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 800, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 850, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 900, 50, false, false));
	secondRow.push_back(new gameTile("plains.png", 950, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1000, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1050, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1100, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1150, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1200, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1250, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1300, 50, false, false));
	secondRow.push_back(new gameTile("plains.png", 1350, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1400, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1450, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1500, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1550, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1600, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1650, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1700, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1750, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1800, 50, true, false));
	secondRow.push_back(new gameTile("plains.png", 1850, 50, true, false));
	secondRow.push_back(new gameTile("wall.png", 1900, 50, true, false));
	tiles.push_back(secondRow);

	std::vector<gameTile*>thirdRow;
	thirdRow.push_back(new gameTile("wall.png", 0, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 50, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 100, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 150, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 200, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 250, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 300, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 350, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 400, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 450, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 500, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 550, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 600, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 650, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 700, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 750, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 800, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 850, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 900, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 950, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 1000, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 1050, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 1100, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 1150, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 1200, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 1250, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 1300, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 1350, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 1400, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 1450, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 1500, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 1550, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 1600, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 1650, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 1700, 100, false, false));
	thirdRow.push_back(new gameTile("plains.png", 1750, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 1800, 100, true, false));
	thirdRow.push_back(new gameTile("plains.png", 1850, 100, false, false));
	thirdRow.push_back(new gameTile("wall.png", 1900, 100, false, false));
	tiles.push_back(thirdRow);

	std::vector<gameTile*>fourthRow;
	fourthRow.push_back(new gameTile("wall.png", 0, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 50, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 100, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 150, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 200, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 250, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 300, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 350, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 400, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 450, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 500, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 550, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 600, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 650, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 700, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 750, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 800, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 850, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 900, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 950, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 1000, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 1050, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 1100, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 1150, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 1200, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 1250, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 1300, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 1350, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 1400, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 1450, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 1500, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 1550, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 1600, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 1650, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 1700, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 1750, 150, true, false));
	fourthRow.push_back(new gameTile("plains.png", 1800, 150, false, false));
	fourthRow.push_back(new gameTile("plains.png", 1850, 150, true, false));
	fourthRow.push_back(new gameTile("wall.png", 1900, 150, true, false)); 
	tiles.push_back(fourthRow);

	std::vector<gameTile*>fifthRow;
	fifthRow.push_back(new gameTile("wall.png", 0, 200, false, false));
	fifthRow.push_back(new gameTile("plains.png", 50, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 100, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 150, 200,false, false));
	fifthRow.push_back(new gameTile("plains.png", 200, 200, false, false));
	fifthRow.push_back(new gameTile("plains.png", 250, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 300, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 350, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 400, 200, false, false));
	fifthRow.push_back(new gameTile("plains.png", 450, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 500, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 550, 200, false, false));
	fifthRow.push_back(new gameTile("plains.png", 600, 200, false, false));
	fifthRow.push_back(new gameTile("plains.png", 650, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 700, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 750, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 800, 200, false, false));
	fifthRow.push_back(new gameTile("plains.png", 850, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 900, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 950, 200, false, false));
	fifthRow.push_back(new gameTile("plains.png", 1000, 200, false, false));
	fifthRow.push_back(new gameTile("plains.png", 1050, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 1100, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 1150, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 1200, 200, false, false));
	fifthRow.push_back(new gameTile("plains.png", 1250, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 1300, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 1350, 200, false, false));
	fifthRow.push_back(new gameTile("plains.png", 1400, 200, false, false));
	fifthRow.push_back(new gameTile("plains.png", 1450, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 1500, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 1550, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 1600, 200, false, false));
	fifthRow.push_back(new gameTile("plains.png", 1650, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 1700, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 1750, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 1800, 200, true, false));
	fifthRow.push_back(new gameTile("plains.png", 1850, 200, true, false));
	fifthRow.push_back(new gameTile("wall.png", 1900, 200, true, false));
	tiles.push_back(fifthRow);

	std::vector<gameTile*>sixthRow;
	sixthRow.push_back(new gameTile("wall.png", 0, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 50, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 100, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 150, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 200, 250, false, false));
	sixthRow.push_back(new gameTile("plains.png", 250, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 300, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 350, 250, false, false));
	sixthRow.push_back(new gameTile("plains.png", 400, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 450, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 500, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 550, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 600, 250, false, false));
	sixthRow.push_back(new gameTile("plains.png", 650, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 700, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 750, 250, false, false));
	sixthRow.push_back(new gameTile("plains.png", 800, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 850, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 900, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 950, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1000, 250, false, false));
	sixthRow.push_back(new gameTile("plains.png", 1050, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1100, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1150, 250, false, false));
	sixthRow.push_back(new gameTile("plains.png", 1200, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1250, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1300, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1350, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1400, 250, false, false));
	sixthRow.push_back(new gameTile("plains.png", 1450, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1500, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1550, 250, false, false));
	sixthRow.push_back(new gameTile("plains.png", 1600, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1650, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1700, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1750, 250, false, false));
	sixthRow.push_back(new gameTile("plains.png", 1800, 250, true, false));
	sixthRow.push_back(new gameTile("plains.png", 1850, 250, true, false));
	sixthRow.push_back(new gameTile("wall.png", 1900, 250, false, false));
	tiles.push_back(sixthRow);

	std::vector<gameTile*>seventhRow;
	seventhRow.push_back(new gameTile("wall.png", 0, 300, false, false));
	seventhRow.push_back(new gameTile("plains.png", 50, 300, false, false));
	seventhRow.push_back(new gameTile("plains.png", 100, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 150, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 200, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 250, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 300, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 350, 300, false, false));
	seventhRow.push_back(new gameTile("plains.png", 400, 300, false, false));
	seventhRow.push_back(new gameTile("plains.png", 450, 300, false, false));
	seventhRow.push_back(new gameTile("plains.png", 500, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 550, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 600, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 650, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 700, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 750, 300, false, false));
	seventhRow.push_back(new gameTile("plains.png", 800, 300, false, false));
	seventhRow.push_back(new gameTile("plains.png", 850, 300, false, false));
	seventhRow.push_back(new gameTile("plains.png", 900, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 950, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1000, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1050, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1100, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1150, 300, false, false));
	seventhRow.push_back(new gameTile("plains.png", 1200, 300, false, false));
	seventhRow.push_back(new gameTile("plains.png", 1250, 300, false, false));
	seventhRow.push_back(new gameTile("plains.png", 1300, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1350, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1400, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1450, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1500, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1550, 300, false, false));
	seventhRow.push_back(new gameTile("plains.png", 1600, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1650, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1700, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1750, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1800, 300, true, false));
	seventhRow.push_back(new gameTile("plains.png", 1850, 300, false, false));
	seventhRow.push_back(new gameTile("wall.png", 1900, 300, false, false));
	tiles.push_back(seventhRow);

	std::vector<gameTile*>eigthRow;
	eigthRow.push_back(new gameTile("wall.png", 0, 350, false, false));
	eigthRow.push_back(new gameTile("wall.png", 50, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 100, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 150, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 200, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 250, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 300, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 350, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 400, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 450, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 500, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 550, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 600, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 650, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 700, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 750, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 800, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 850, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 900, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 950, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 1000, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 1050, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 1100, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 1150, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 1200, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 1250, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 1300, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 1350, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 1400, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 1450, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 1500, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 1550, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 1600, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 1650, 350, false, false));
	eigthRow.push_back(new gameTile("plains.png", 1700, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 1750, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 1800, 350, true, false));
	eigthRow.push_back(new gameTile("plains.png", 1850, 350, true, false));
	eigthRow.push_back(new gameTile("wall.png", 1900, 350, true, false));
	tiles.push_back(eigthRow);

	std::vector<gameTile*>ninthRow;
	ninthRow.push_back(new gameTile("plains.png", 0, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 50, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 100, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 150, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 200, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 250, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 300, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 350, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 400, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 450, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 500, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 550, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 600, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 650, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 700, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 750, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 800, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 850, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 900, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 950, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 1000, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 1050, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 1100, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 1150, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 1200, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 1250, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 1300, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 1350, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 1400, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 1450, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 1500, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 1550, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 1600, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 1650, 400, false, false));
	ninthRow.push_back(new gameTile("plains.png", 1700, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 1750, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 1800, 400, true, false));
	ninthRow.push_back(new gameTile("plains.png", 1850, 400, true, false));
	ninthRow.push_back(new gameTile("wall.png", 1900, 400, true, false));
	tiles.push_back(ninthRow);

	std::vector<gameTile*>tenthRow;
	tenthRow.push_back(new gameTile("plains.png", 0, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 50, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 100, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 150, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 200, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 250, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 300, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 350, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 400, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 450, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 500, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 550, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 600, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 650, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 700, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 750, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 800, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 850, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 900, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 950, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 1000, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 1050, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 1100, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 1150, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 1200, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 1250, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 1300, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 1350, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 1400, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 1450, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 1500, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 1550, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 1600, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 1650, 450, false, false));
	tenthRow.push_back(new gameTile("plains.png", 1700, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 1750, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 1800, 450, true, false));
	tenthRow.push_back(new gameTile("plains.png", 1850, 450, true, false));
	tenthRow.push_back(new gameTile("wall.png", 1900, 450, true, false));
	tiles.push_back(tenthRow);

	std::vector<gameTile*>eleventhRow;
	eleventhRow.push_back(new gameTile("plains.png", 0, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 50, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 100, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 150, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 200, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 250, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 300, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 350, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 400, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 450, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 500, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 550, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 600, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 650, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 700, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 750, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 800, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 850, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 900, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 950, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 1000, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 1050, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 1100, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 1150, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 1200, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 1250, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 1300, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 1350, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 1400, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 1450, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 1500, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 1550, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 1600, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 1650, 500, false, false));
	eleventhRow.push_back(new gameTile("plains.png", 1700, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 1750, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 1800, 500, true, false));
	eleventhRow.push_back(new gameTile("plains.png", 1850, 500, true, false));
	eleventhRow.push_back(new gameTile("wall.png", 1900, 500, true, false));
	tiles.push_back(eleventhRow);

	std::vector<gameTile*>twelthRow;
	twelthRow.push_back(new gameTile("plains.png", 0, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 50, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 100, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 150, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 200, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 250, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 300, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 350, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 400, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 450, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 500, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 550, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 600, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 650, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 700, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 750, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 800, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 850, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 900, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 950, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 1000, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 1050, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 1100, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 1150, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 1200, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 1250, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 1300, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 1350, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 1400, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 1450, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 1500, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 1550, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 1600, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 1650, 550, false, false));
	twelthRow.push_back(new gameTile("plains.png", 1700, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 1750, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 1800, 550, true, false));
	twelthRow.push_back(new gameTile("plains.png", 1850, 550, true, false));
	twelthRow.push_back(new gameTile("wall.png", 1900, 550, true, false));
	tiles.push_back(twelthRow);

	std::vector<gameTile*>thirteenthRow;
	thirteenthRow.push_back(new gameTile("plains.png", 0, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 50, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 100, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 150, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 200, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 250, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 300, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 350, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 400, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 450, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 500, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 550, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 600, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 650, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 700, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 750, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 800, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 850, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 900, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 950, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1000, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1050, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1100, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1150, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1200, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1250, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1300, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1350, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1400, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1450, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1500, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1550, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1600, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1650, 600, false, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1700, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1750, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1800, 600, true, false));
	thirteenthRow.push_back(new gameTile("plains.png", 1850, 600, true, false));
	thirteenthRow.push_back(new gameTile("wall.png", 1900, 600, true, false));
	tiles.push_back(thirteenthRow);

	std::vector<gameTile*>fourteenthRow;
	fourteenthRow.push_back(new gameTile("plains.png", 0, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 50, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 100, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 150, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 200, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 250, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 300, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 350, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 400, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 450, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 500, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 550, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 600, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 650, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 700, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 750, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 800, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 850, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 900, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 950, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1000, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1050, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1100, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1150, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1200, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1250, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1300, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1350, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1400, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1450, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1500, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1550, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1600, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1650, 650, false, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1700, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1750, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1800, 650, true, false));
	fourteenthRow.push_back(new gameTile("plains.png", 1850, 650, true, false));
	fourteenthRow.push_back(new gameTile("wall.png", 1900, 650, true, false));
	tiles.push_back(fourteenthRow);

	std::vector<gameTile*>fifthteenthRow;
	fifthteenthRow.push_back(new gameTile("wall.png", 0, 700, false, false));
	fifthteenthRow.push_back(new gameTile("wall.png", 50, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 100, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 150, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 200, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 250, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 300, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 350, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 400, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 450, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 500, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 550, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 600, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 650, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 700, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 750, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 800, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 850, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 900, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 950, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1000, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1050, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1100, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1150, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1200, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1250, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1300, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1350, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1400, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1450, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1500, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1550, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1600, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1650, 700, false, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1700, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1750, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1800, 700, true, false));
	fifthteenthRow.push_back(new gameTile("plains.png", 1850, 700, true, false));
	fifthteenthRow.push_back(new gameTile("wall.png", 1900, 700, true, false));
	tiles.push_back(fifthteenthRow);

	std::vector<gameTile*>sixteenthRow;
	sixteenthRow.push_back(new gameTile("wall.png", 0, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 50, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 100, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 150, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 200, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 250, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 300, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 350, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 400, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 450, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 500, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 550, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 600, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 650, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 700, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 750, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 800, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 850, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 900, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 950, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1000, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1050, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1100, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1150, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1200, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1250, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1300, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1350, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1400, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1450, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1500, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1550, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1600, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1650, 750, false, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1700, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1750, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1800, 750, true, false));
	sixteenthRow.push_back(new gameTile("plains.png", 1850, 750, true, false));
	sixteenthRow.push_back(new gameTile("wall.png", 1900, 750, true, false));
	tiles.push_back(sixteenthRow);

	std::vector<gameTile*>seventeenthRow;
	seventeenthRow.push_back(new gameTile("wall.png", 0, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 50, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 100, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 150, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 200, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 250, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 300, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 350, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 400, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 450, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 500, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 550, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 600, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 650, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 700, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 750, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 800, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 850, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 900, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 950, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1000, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1050, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1100, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1150, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1200, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1250, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1300, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1350, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1400, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1450, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1500, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1550, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1600, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1650, 800, false, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1700, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1750, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1800, 800, true, false));
	seventeenthRow.push_back(new gameTile("plains.png", 1850, 800, true, false));
	seventeenthRow.push_back(new gameTile("wall.png", 1900, 800, true, false));
	tiles.push_back(seventeenthRow);

	std::vector<gameTile*>eighteenthRow;
	eighteenthRow.push_back(new gameTile("wall.png", 0, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 50, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 100, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 150, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 200, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 250, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 300, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 350, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 400, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 450, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 500, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 550, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 600, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 650, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 700, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 750, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 800, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 850, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 900, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 950, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1000, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1050, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1100, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1150, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1200, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1250, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1300, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1350, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1400, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1450, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1500, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1550, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1600, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1650, 850, false, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1700, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1750, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1800, 850, true, false));
	eighteenthRow.push_back(new gameTile("plains.png", 1850, 850, true, false));
	eighteenthRow.push_back(new gameTile("wall.png", 1900, 850, true, false));
	tiles.push_back(eighteenthRow);

	std::vector<gameTile*>nineteenthRow;
	nineteenthRow.push_back(new gameTile("wall.png", 0, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 50, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 100, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 150, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 200, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 250, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 300, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 350, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 400, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 450, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 500, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 550, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 600, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 650, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 700, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 750, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 800, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 850, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 900, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 950, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1000, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1050, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1100, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1150, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1200, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1250, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1300, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1350, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1400, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1450, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1500, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1550, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1600, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1650, 900, false, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1700, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1750, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1800, 900, true, false));
	nineteenthRow.push_back(new gameTile("plains.png", 1850, 900, true, false));
	nineteenthRow.push_back(new gameTile("wall.png", 1900, 900, true, false));
	tiles.push_back(nineteenthRow);

	std::vector<gameTile*>twentiethRow;
	twentiethRow.push_back(new gameTile("wall.png", 0, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 50, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 100, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 150, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 200, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 250, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 300, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 350, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 400, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 450, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 500, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 550, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 600, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 650, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 700, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 750, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 800, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 850, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 900, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 950, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 1000, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 1050, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 1100, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 1150, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 1200, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 1250, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 1300, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 1350, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 1400, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 1450, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 1500, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 1550, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 1600, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 1650, 950, false, false));
	twentiethRow.push_back(new gameTile("plains.png", 1700, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 1750, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 1800, 950, true, false));
	twentiethRow.push_back(new gameTile("plains.png", 1850, 950, true, false));
	twentiethRow.push_back(new gameTile("wall.png", 1900, 950, true, false));
	tiles.push_back(twentiethRow);

	std::vector<gameTile*>twentyfirstRow;
	twentyfirstRow.push_back(new gameTile("wall.png", 0, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 50, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 100, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 150, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 200, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 250, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 300, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 350, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 400, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 450, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 500, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 550, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 600, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 650, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 700, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 750, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 800, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 850, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 900, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 950, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1000, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1050, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1100, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1150, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1200, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1250, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1300, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1350, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1400, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1450, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1500, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1550, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1600, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1650, 1000, false, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1700, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1750, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1800, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("plains.png", 1850, 1000, true, false));
	twentyfirstRow.push_back(new gameTile("wall.png", 1900, 1000, true, false));
	tiles.push_back(twentyfirstRow);

	std::vector<gameTile*>twentysecondRow;
	twentysecondRow.push_back(new gameTile("wall.png", 0, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 50, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 100, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 150, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 200, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 250, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 300, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 350, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 400, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 450, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 500, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 550, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 600, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 650, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 700, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 750, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 800, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 850, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 900, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 950, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1000, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1050, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1100, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1150, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1200, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1250, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1300, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1350, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1400, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1450, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1500, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1550, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1600, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1650, 1050, false, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1700, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1750, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1800, 1050, true, false));
	twentysecondRow.push_back(new gameTile("plains.png", 1850, 1050, true, false));
	twentysecondRow.push_back(new gameTile("wall.png", 1900, 1050, true, false));
	tiles.push_back(twentysecondRow);
	
	std::vector<gameTile*>twentythirdRow;
	twentythirdRow.push_back(new gameTile("wall.png", 0, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 50, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 100, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 150, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 200, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 250, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 300, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 350, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 400, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 450, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 500, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 550, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 600, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 650, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 700, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 750, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 800, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 850, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 900, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 950, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1000, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1050, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1100, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1150, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1200, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1250, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1300, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1350, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1400, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1450, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1500, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1550, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1600, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1650, 1100, false, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1700, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1750, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1800, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1850, 1100, true, false));
	twentythirdRow.push_back(new gameTile("wall.png", 1900, 1100, true, false));
	tiles.push_back(twentythirdRow);
	*/
	